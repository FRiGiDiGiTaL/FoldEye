"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/subscribe";
exports.ids = ["pages/api/subscribe"];
exports.modules = {

/***/ "(api-node)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPayment: () => (/* binding */ createPayment),\n/* harmony export */   createSubscription: () => (/* binding */ createSubscription),\n/* harmony export */   getSubscriptionByStripeId: () => (/* binding */ getSubscriptionByStripeId),\n/* harmony export */   getUserByEmail: () => (/* binding */ getUserByEmail),\n/* harmony export */   getUserByStripeCustomerId: () => (/* binding */ getUserByStripeCustomerId),\n/* harmony export */   getUserSubscriptionStatus: () => (/* binding */ getUserSubscriptionStatus),\n/* harmony export */   isEventProcessed: () => (/* binding */ isEventProcessed),\n/* harmony export */   markEventProcessed: () => (/* binding */ markEventProcessed),\n/* harmony export */   recordStripeEvent: () => (/* binding */ recordStripeEvent),\n/* harmony export */   startTrial: () => (/* binding */ startTrial),\n/* harmony export */   supabase: () => (/* binding */ supabase),\n/* harmony export */   supabaseAdmin: () => (/* binding */ supabaseAdmin),\n/* harmony export */   updatePayment: () => (/* binding */ updatePayment),\n/* harmony export */   updateSubscription: () => (/* binding */ updateSubscription),\n/* harmony export */   upsertUser: () => (/* binding */ upsertUser)\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"@supabase/supabase-js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__);\n// lib/supabase.ts\n\nconst supabaseUrl = \"https://mpcmqjxmnhlozrdmlkts.supabase.co\";\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1wY21xanhtbmhsb3pyZG1sa3RzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTczNjk2ODEsImV4cCI6MjA3Mjk0NTY4MX0.Q3Pz8muPICb8Omrzaf247LAXP6Alx0WdbEb_0DwE9Nk\";\n// Client for server-side operations (admin)\nconst supabaseAdmin = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseServiceKey, {\n    auth: {\n        autoRefreshToken: false,\n        persistSession: false\n    }\n});\n// Client for client-side operations\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(supabaseUrl, supabaseAnonKey);\n// Stripe Events / Idempotency Functions\nasync function recordStripeEvent(stripeEventId, eventType, data, apiVersion) {\n    try {\n        console.log(`Recording Stripe event: ${stripeEventId} (${eventType})`);\n        const { data: result, error } = await supabaseAdmin.from('stripe_events').insert({\n            stripe_event_id: stripeEventId,\n            event_type: eventType,\n            data,\n            api_version: apiVersion,\n            processed: false\n        }).select().single();\n        if (error) {\n            // If it's a unique constraint violation, the event already exists\n            if (error.code === '23505') {\n                console.log(`Stripe event ${stripeEventId} already recorded`);\n                return false; // Event already exists\n            }\n            console.error('Error recording Stripe event:', error);\n            return false;\n        }\n        console.log(`Successfully recorded event: ${stripeEventId}`);\n        return true; // New event, proceed with processing\n    } catch (error) {\n        console.error('Error recording Stripe event:', error);\n        return false;\n    }\n}\nasync function markEventProcessed(stripeEventId) {\n    try {\n        console.log(`Marking event as processed: ${stripeEventId}`);\n        const { error } = await supabaseAdmin.from('stripe_events').update({\n            processed: true,\n            processed_at: new Date().toISOString()\n        }).eq('stripe_event_id', stripeEventId);\n        if (error) {\n            console.error('Error marking event as processed:', error);\n            return false;\n        }\n        console.log(`Successfully marked event as processed: ${stripeEventId}`);\n        return true;\n    } catch (error) {\n        console.error('Error marking event as processed:', error);\n        return false;\n    }\n}\nasync function isEventProcessed(stripeEventId) {\n    try {\n        console.log(`Checking if event is processed: ${stripeEventId}`);\n        const { data, error } = await supabaseAdmin.from('stripe_events').select('processed').eq('stripe_event_id', stripeEventId).single();\n        if (error) {\n            // If event not found, it hasn't been processed\n            if (error.code === 'PGRST116') {\n                console.log(`Event ${stripeEventId} not found in database`);\n                return false;\n            }\n            console.error('Error checking if event is processed:', error);\n            return false;\n        }\n        const isProcessed = data?.processed === true;\n        console.log(`Event ${stripeEventId} processed status: ${isProcessed}`);\n        return isProcessed;\n    } catch (error) {\n        console.error('Error checking if event is processed:', error);\n        return false;\n    }\n}\n// User Management Functions\nasync function getUserSubscriptionStatus(email) {\n    try {\n        const { data, error } = await supabaseAdmin.rpc('get_user_subscription_status', {\n            user_email: email\n        });\n        if (error) {\n            console.error('Error getting user subscription status:', error);\n            return null;\n        }\n        return data?.[0] || null;\n    } catch (error) {\n        console.error('Error calling get_user_subscription_status:', error);\n        return null;\n    }\n}\nasync function upsertUser(email, stripeCustomerId) {\n    try {\n        const { data, error } = await supabaseAdmin.rpc('upsert_user', {\n            user_email: email,\n            stripe_customer_id: stripeCustomerId\n        });\n        if (error) {\n            console.error('Error upserting user:', error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error('Error calling upsert_user:', error);\n        return null;\n    }\n}\nasync function startTrial(email) {\n    try {\n        const { data, error } = await supabaseAdmin.rpc('start_trial', {\n            user_email: email\n        });\n        if (error) {\n            console.error('Error starting trial:', error);\n            return false;\n        }\n        return data === true;\n    } catch (error) {\n        console.error('Error calling start_trial:', error);\n        return false;\n    }\n}\nasync function getUserByEmail(email) {\n    try {\n        const { data, error } = await supabaseAdmin.from('users').select('*').eq('email', email).single();\n        if (error) {\n            console.error('Error getting user by email:', error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error('Error getting user by email:', error);\n        return null;\n    }\n}\nasync function getUserByStripeCustomerId(customerId) {\n    try {\n        const { data, error } = await supabaseAdmin.from('users').select('*').eq('stripe_customer_id', customerId).single();\n        if (error) {\n            console.error('Error getting user by stripe customer ID:', error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error('Error getting user by stripe customer ID:', error);\n        return null;\n    }\n}\n// Subscription Management Functions\nasync function createSubscription(subscription) {\n    try {\n        console.log('Creating subscription:', subscription);\n        const { data, error } = await supabaseAdmin.from('subscriptions').insert(subscription).select().single();\n        if (error) {\n            console.error('Error creating subscription:', error);\n            return null;\n        }\n        console.log('Successfully created subscription:', data.id);\n        return data;\n    } catch (error) {\n        console.error('Error creating subscription:', error);\n        return null;\n    }\n}\nasync function updateSubscription(stripeSubscriptionId, updates) {\n    try {\n        console.log(`Updating subscription: ${stripeSubscriptionId}`, updates);\n        const { data, error } = await supabaseAdmin.from('subscriptions').update(updates).eq('stripe_subscription_id', stripeSubscriptionId).select().single();\n        if (error) {\n            console.error('Error updating subscription:', error);\n            return null;\n        }\n        console.log('Successfully updated subscription:', data.id);\n        return data;\n    } catch (error) {\n        console.error('Error updating subscription:', error);\n        return null;\n    }\n}\nasync function getSubscriptionByStripeId(stripeSubscriptionId) {\n    try {\n        const { data, error } = await supabaseAdmin.from('subscriptions').select('*').eq('stripe_subscription_id', stripeSubscriptionId).single();\n        if (error) {\n            console.error('Error getting subscription by Stripe ID:', error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error('Error getting subscription by Stripe ID:', error);\n        return null;\n    }\n}\n// Payment Management Functions\nasync function createPayment(payment) {\n    try {\n        console.log('Creating payment record:', payment.stripe_payment_intent_id);\n        const { data, error } = await supabaseAdmin.from('payments').insert(payment).select().single();\n        if (error) {\n            console.error('Error creating payment record:', error);\n            return null;\n        }\n        console.log('Successfully created payment record:', data.id);\n        return data;\n    } catch (error) {\n        console.error('Error creating payment record:', error);\n        return null;\n    }\n}\nasync function updatePayment(paymentIntentId, updates) {\n    try {\n        const { data, error } = await supabaseAdmin.from('payments').update(updates).eq('stripe_payment_intent_id', paymentIntentId).select().single();\n        if (error) {\n            console.error('Error updating payment:', error);\n            return null;\n        }\n        return data;\n    } catch (error) {\n        console.error('Error updating payment:', error);\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/supabase.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubscribe&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csubscribe.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubscribe&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csubscribe.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_subscribe_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages\\api\\subscribe.ts */ \"(api-node)/./pages/api/subscribe.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_subscribe_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_subscribe_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/subscribe\",\n        pathname: \"/api/subscribe\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_subscribe_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/subscribe\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest, routerServerContext } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: [],\n                multiZoneDraftMode: Boolean(false),\n                trustHostHeader: false,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/subscribe\",\n                internalRevalidate: routerServerContext == null ? void 0 : routerServerContext.revalidate,\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubscribe&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csubscribe.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/subscribe.ts":
/*!********************************!*\
  !*** ./pages/api/subscribe.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/supabase */ \"(api-node)/./lib/supabase.ts\");\n// pages/api/subscribe.ts\n\nasync function handler(req, res) {\n    if (req.method !== \"POST\") {\n        return res.status(405).json({\n            success: false,\n            error: \"Method not allowed\"\n        });\n    }\n    try {\n        const { email } = req.body;\n        // Validate email\n        if (!email || typeof email !== \"string\") {\n            return res.status(400).json({\n                success: false,\n                error: \"Email is required\"\n            });\n        }\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email.trim())) {\n            return res.status(400).json({\n                success: false,\n                error: \"Invalid email address\"\n            });\n        }\n        const cleanEmail = email.trim().toLowerCase();\n        // Check if user already exists and trial status\n        const subscriptionStatus = await (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_0__.getUserSubscriptionStatus)(cleanEmail);\n        if (subscriptionStatus) {\n            // User exists, check if they already have active subscription or trial\n            if (subscriptionStatus.has_active_subscription) {\n                return res.status(400).json({\n                    success: false,\n                    error: \"You already have an active subscription\"\n                });\n            }\n            if (subscriptionStatus.trial_active) {\n                return res.status(400).json({\n                    success: false,\n                    error: \"You already have an active trial\"\n                });\n            }\n            // Check if trial was already used\n            if (subscriptionStatus.trial_days_remaining === 0 && !subscriptionStatus.trial_active) {\n                return res.status(400).json({\n                    success: false,\n                    error: \"Trial already used for this email address\"\n                });\n            }\n        }\n        // Create or update user in database\n        const userId = await (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_0__.upsertUser)(cleanEmail);\n        if (!userId) {\n            return res.status(500).json({\n                success: false,\n                error: \"Failed to create user account\"\n            });\n        }\n        // Start trial\n        const trialStarted = await (0,_lib_supabase__WEBPACK_IMPORTED_MODULE_0__.startTrial)(cleanEmail);\n        if (!trialStarted) {\n            return res.status(500).json({\n                success: false,\n                error: \"Failed to start trial. Trial may have already been used.\"\n            });\n        }\n        // Calculate trial dates\n        const startDate = Date.now();\n        const expiryDate = startDate + 7 * 24 * 60 * 60 * 1000; // 7 days\n        const trialData = {\n            email: cleanEmail,\n            startDate,\n            expiryDate,\n            trialDays: 7,\n            status: 'active'\n        };\n        console.log(`Trial started successfully for ${cleanEmail}`);\n        return res.status(200).json({\n            success: true,\n            message: \"Trial started successfully\",\n            trialData\n        });\n    } catch (error) {\n        console.error(\"Trial signup error:\", error);\n        return res.status(500).json({\n            success: false,\n            error: \"Internal server error. Please try again later.\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/subscribe.ts\n");

/***/ }),

/***/ "@supabase/supabase-js":
/*!****************************************!*\
  !*** external "@supabase/supabase-js" ***!
  \****************************************/
/***/ ((module) => {

module.exports = require("@supabase/supabase-js");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fsubscribe&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Csubscribe.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();